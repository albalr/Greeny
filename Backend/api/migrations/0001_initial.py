# Generated by Django 5.0.3 on 2024-04-21 18:39

import django.contrib.auth.models
import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.expressions
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('rating', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='TransportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('METRO', 'metro'), ('TRAM', 'tram'), ('FGC', 'fgc'), ('RENFE', 'renfe')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('friends', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BicingStation',
            fields=[
                ('station_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.station')),
                ('capacitat', models.IntegerField(default=0)),
            ],
            bases=('api.station',),
        ),
        migrations.CreateModel(
            name='BusStation',
            fields=[
                ('station_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.station')),
                ('lines', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), size=None)),
            ],
            bases=('api.station',),
        ),
        migrations.CreateModel(
            name='ChargingStation',
            fields=[
                ('station_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.station')),
                ('acces', models.CharField(max_length=100)),
                ('charging_velocity', models.CharField(max_length=100)),
                ('power', models.IntegerField(default=0)),
                ('current_type', models.CharField(max_length=100)),
                ('connexion_type', models.CharField(max_length=100)),
            ],
            bases=('api.station',),
        ),
        migrations.CreateModel(
            name='PublicTransportStation',
            fields=[
                ('station_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.station')),
            ],
            bases=('api.station',),
        ),
        migrations.CreateModel(
            name='Friend_Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kg_CO2', models.FloatField(default=0.0)),
                ('km_Totals', models.FloatField(default=0.0)),
                ('km_Walked', models.FloatField(default=0.0)),
                ('km_Biked', models.FloatField(default=0.0)),
                ('km_ElectricCar', models.FloatField(default=0.0)),
                ('km_PublicTransport', models.FloatField(default=0.0)),
                ('km_Bus', models.FloatField(default=0.0)),
                ('km_Motorcycle', models.FloatField(default=0.0)),
                ('km_Car', models.FloatField(default=0.0)),
                ('username', models.OneToOneField(max_length=100, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lines', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2), size=None)),
                ('transport_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.transporttype')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.publictransportstation')),
            ],
        ),
        migrations.AddConstraint(
            model_name='statistics',
            constraint=models.CheckConstraint(check=models.Q(('km_Totals', django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('km_Walked'), '+', models.F('km_Biked')), '+', models.F('km_ElectricCar')), '+', models.F('km_PublicTransport')), '+', models.F('km_Bus')), '+', models.F('km_Motorcycle')), '+', models.F('km_Car')))), name='km_totals_constraint'),
        ),
    ]
