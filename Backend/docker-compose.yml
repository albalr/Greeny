services:
  db:
    image: mdillon/postgis:latest
    volumes:
      - .././DB:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "greeny", "-d", "db_greeny"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: 
      - /bin/bash
      - -c
      - |
        python manage.py fetchstations
        python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - ./uploads:/code/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.scheluded.schedule: "0 0 1 * *"
      ofelia.job-exec.scheluded.command: "python manage.py check_updates"

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - backend
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  pylint:
    profiles: ["pylint"]
    build: .
    command: sh -c 'pip install pylint && pip install pylint-django && pylint --load-plugins pylint_django --django-settings-module=greeny.settings --disable=missing-class-docstring,missing-function-docstring,missing-module-docstring,too-many-ancestors,no-member --ignore=migrations api'
    volumes:
      - .:/code
    env_file:
      - ./.env
